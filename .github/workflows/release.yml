name: Release

on:
  # Generate an alpha every day if there are changes in the master branch
  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:
    inputs:
      # Note: `releaseType` will be set to an empty string when automatically run without human action (via the cronjob).
      #       In that case, it means we want to generate an alpha.
      releaseType:
        description: 'Set to "release" for a beta release.'
        required: false
        default: "alpha"
      signExe:
        description: 'Set to "true" to generate and sign .exe on Windows.'
        required: false
        default: "false"

env:
  GITHUB_USERNAME: "nuxeodrive"
  GITHUB_EMAILID: "drive@hyland.com"

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.changes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch all history for all branches and tags
        run: git fetch --unshallow --tags --prune --recurse-submodules=on-demand --quiet

      - name: Get the latest commit SHA on master branch
        id: latest_commit
        run: echo "sha=$(git rev-parse origin/master)" >> $GITHUB_STATE

      - name: Get the latest commit date on master branch
        id: latest_commit_date
        run: echo "date=$(git show -s --format=%ci $(git rev-parse origin/main) | cut -d' ' -f1)" >> $GITHUB_STATE

      - name: Get the last successful commit SHA
        id: last_successful_commit
        run: |
          last_successful_commit=$(gh run list --branch master --workflow Release --json headSha -q '.[0].headSha')
          echo "last_successful_sha=${last_successful_commit}" >> $GITHUB_STATE

      - name: Get the last successful commit date
        id: last_successful_commit_date
        run: |
          last_successful_commit_date=$(git show -s --format=%ci ${last_successful_commit} | cut -d' ' -f1)
          echo "last_successful_date=${last_successful_commit_date}" >> $GITHUB_STATE

      - name: Check for changes
        id: check_changes
        run: |
          latest_sha=$(cat $GITHUB_STATE | grep 'sha' | cut -d'=' -f2)
          last_successful_sha=$(cat $GITHUB_STATE | grep 'last_successful_sha' | cut -d'=' -f2)
          latest_date=$(cat $GITHUB_STATE | grep 'date' | cut -d'=' -f2)
          last_successful_date=$(cat $GITHUB_STATE | grep 'last_successful_date' | cut -d'=' -f2)
          
          if [ "$latest_date" == "$last_successful_date" ]; then
            echo "Changes detected in master branch."
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in master branch since last successful run."
            echo "changes=false" >> $GITHUB_OUTPUT

  release:
    runs-on: ${{ matrix.os }}
    needs: [check_changes]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, 'macos-latest']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Proceed if there are changes
        if: needs.check_changes.outputs.has_changes == 'true'
        run: echo "Proceeding with the release job."

      # Add the rest of your steps here...
